#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CICO.Models.DBObjects
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CICO")]
	public partial class CICOModelsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insert_User(_User instance);
    partial void Update_User(_User instance);
    partial void Delete_User(_User instance);
    partial void InsertAliment(Aliment instance);
    partial void UpdateAliment(Aliment instance);
    partial void DeleteAliment(Aliment instance);
    partial void InsertJournal(Journal instance);
    partial void UpdateJournal(Journal instance);
    partial void DeleteJournal(Journal instance);
    #endregion
		
		public CICOModelsDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CICOConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CICOModelsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CICOModelsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CICOModelsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CICOModelsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<_User> _Users
		{
			get
			{
				return this.GetTable<_User>();
			}
		}
		
		public System.Data.Linq.Table<Aliment> Aliments
		{
			get
			{
				return this.GetTable<Aliment>();
			}
		}
		
		public System.Data.Linq.Table<Journal> Journals
		{
			get
			{
				return this.GetTable<Journal>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[_User]")]
	public partial class _User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _IdUser;
		
		private string _Name;
		
		private decimal _Weight;
		
		private decimal _Height;
		
		private int _Age;
		
		private decimal _CalloriesRequirements;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdUserChanging(System.Guid value);
    partial void OnIdUserChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnWeightChanging(decimal value);
    partial void OnWeightChanged();
    partial void OnHeightChanging(decimal value);
    partial void OnHeightChanged();
    partial void OnAgeChanging(int value);
    partial void OnAgeChanged();
    partial void OnCalloriesRequirementsChanging(decimal value);
    partial void OnCalloriesRequirementsChanged();
    #endregion
		
		public _User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUser", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid IdUser
		{
			get
			{
				return this._IdUser;
			}
			set
			{
				if ((this._IdUser != value))
				{
					this.OnIdUserChanging(value);
					this.SendPropertyChanging();
					this._IdUser = value;
					this.SendPropertyChanged("IdUser");
					this.OnIdUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,0) NOT NULL")]
		public decimal Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Decimal(18,0) NOT NULL")]
		public decimal Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int NOT NULL")]
		public int Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalloriesRequirements", DbType="Decimal(18,0) NOT NULL")]
		public decimal CalloriesRequirements
		{
			get
			{
				return this._CalloriesRequirements;
			}
			set
			{
				if ((this._CalloriesRequirements != value))
				{
					this.OnCalloriesRequirementsChanging(value);
					this.SendPropertyChanging();
					this._CalloriesRequirements = value;
					this.SendPropertyChanged("CalloriesRequirements");
					this.OnCalloriesRequirementsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Aliment")]
	public partial class Aliment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _IdAliment;
		
		private string _Name;
		
		private EntitySet<Journal> _Journals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdAlimentChanging(System.Guid value);
    partial void OnIdAlimentChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Aliment()
		{
			this._Journals = new EntitySet<Journal>(new Action<Journal>(this.attach_Journals), new Action<Journal>(this.detach_Journals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAliment", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid IdAliment
		{
			get
			{
				return this._IdAliment;
			}
			set
			{
				if ((this._IdAliment != value))
				{
					this.OnIdAlimentChanging(value);
					this.SendPropertyChanging();
					this._IdAliment = value;
					this.SendPropertyChanged("IdAliment");
					this.OnIdAlimentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aliment_Journal", Storage="_Journals", ThisKey="IdAliment", OtherKey="IdAliment")]
		public EntitySet<Journal> Journals
		{
			get
			{
				return this._Journals;
			}
			set
			{
				this._Journals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Journals(Journal entity)
		{
			this.SendPropertyChanging();
			entity.Aliment = this;
		}
		
		private void detach_Journals(Journal entity)
		{
			this.SendPropertyChanging();
			entity.Aliment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Journal")]
	public partial class Journal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _IdJournal;
		
		private System.Guid _IdAliment;
		
		private string _MealName;
		
		private decimal _CalloriesAmount;
		
		private EntityRef<Aliment> _Aliment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdJournalChanging(System.Guid value);
    partial void OnIdJournalChanged();
    partial void OnIdAlimentChanging(System.Guid value);
    partial void OnIdAlimentChanged();
    partial void OnMealNameChanging(string value);
    partial void OnMealNameChanged();
    partial void OnCalloriesAmountChanging(decimal value);
    partial void OnCalloriesAmountChanged();
    #endregion
		
		public Journal()
		{
			this._Aliment = default(EntityRef<Aliment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdJournal", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid IdJournal
		{
			get
			{
				return this._IdJournal;
			}
			set
			{
				if ((this._IdJournal != value))
				{
					this.OnIdJournalChanging(value);
					this.SendPropertyChanging();
					this._IdJournal = value;
					this.SendPropertyChanged("IdJournal");
					this.OnIdJournalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAliment", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid IdAliment
		{
			get
			{
				return this._IdAliment;
			}
			set
			{
				if ((this._IdAliment != value))
				{
					if (this._Aliment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdAlimentChanging(value);
					this.SendPropertyChanging();
					this._IdAliment = value;
					this.SendPropertyChanged("IdAliment");
					this.OnIdAlimentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MealName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MealName
		{
			get
			{
				return this._MealName;
			}
			set
			{
				if ((this._MealName != value))
				{
					this.OnMealNameChanging(value);
					this.SendPropertyChanging();
					this._MealName = value;
					this.SendPropertyChanged("MealName");
					this.OnMealNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalloriesAmount", DbType="Decimal(18,0) NOT NULL")]
		public decimal CalloriesAmount
		{
			get
			{
				return this._CalloriesAmount;
			}
			set
			{
				if ((this._CalloriesAmount != value))
				{
					this.OnCalloriesAmountChanging(value);
					this.SendPropertyChanging();
					this._CalloriesAmount = value;
					this.SendPropertyChanged("CalloriesAmount");
					this.OnCalloriesAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Aliment_Journal", Storage="_Aliment", ThisKey="IdAliment", OtherKey="IdAliment", IsForeignKey=true)]
		public Aliment Aliment
		{
			get
			{
				return this._Aliment.Entity;
			}
			set
			{
				Aliment previousValue = this._Aliment.Entity;
				if (((previousValue != value) 
							|| (this._Aliment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Aliment.Entity = null;
						previousValue.Journals.Remove(this);
					}
					this._Aliment.Entity = value;
					if ((value != null))
					{
						value.Journals.Add(this);
						this._IdAliment = value.IdAliment;
					}
					else
					{
						this._IdAliment = default(System.Guid);
					}
					this.SendPropertyChanged("Aliment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
